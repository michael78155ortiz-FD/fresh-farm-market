// src/lib/supabase/server.ts
import { cookies } from "next/headers";
import { createServerClient, type CookieOptions } from "@supabase/ssr";

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const SUPABASE_ANON = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;

/**
 * Use in Server Components/layouts/loaders (read-only; never writes cookies).
 */
export function supabaseServer() {
  const cookieStore = cookies();

  return createServerClient(SUPABASE_URL, SUPABASE_ANON, {
    cookies: {
      get(name: string) {
        return cookieStore.get(name)?.value;
      },
      // IMPORTANT: do NOT expose set/remove here â€” leaving them out makes the client read-only.
    },
  });
}

/**
 * Use ONLY in Server Actions or Route Handlers (cookie writes allowed).
 */
export function supabaseAction() {
  const cookieStore = cookies();

  return createServerClient(SUPABASE_URL, SUPABASE_ANON, {
    cookies: {
      get(name: string) {
        return cookieStore.get(name)?.value;
      },
      set(name: string, value: string, options: CookieOptions) {
        cookieStore.set({
          name,
          value,
          ...options,
          sameSite: options.sameSite ?? "lax",
        });
      },
      remove(name: string, options: CookieOptions) {
        cookieStore.set({
          name,
          value: "",
          ...options,
          maxAge: 0,
          sameSite: options.sameSite ?? "lax",
        });
      },
    },
  });
}
